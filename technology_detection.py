import re

def detecter_technologie_demandee(phrase):
    # Liste de noms de technologies courants
    technologies = ["python", "javascript", "ruby", "lua","git","uml","mask", "rex", "common kads", "macao", "kod","mysql", "sql","java", "uml", "javadoc", "java se","sgbd", "oracle", "aws", "docker","omniscope","gantt","wimp", "post-wimp","prolog", "clips", "madkit","lazarus","pencil","axure","android studio","vpn", "firewall", "web", "mobilité", "wireless", "cryptographie", "malwares", "audits sécurité" "réseaux de neurones", "machine learning", "rgpd", "pia", "android studio", "sqliteopenhelper", "room", "mvc", "mvp", "mvvm", "android architecture components", "kanban", "javascript", "react", "cmmi", "itil", "cobit", "iso",
    "machine learning", "data analytics", "mongodb", "r", "dashboards webs interactifs","plateformes de l'économie collaborative", "design toolkits", "ia", "cloud computing", "iot", "blockchain",
    "service web", "design patterns", "physique quantique", "physique statistique", "rayonnement", "ondes électromagnétiques", "métaux", "alliages", "biotechnologies", "nanotechnologies", "cao","modeling","mécanique des matériaux","analyse numérique", "python", "matlab","polymères", "copolymères", "photopolymères","matériaux", "physique","polymères", "composites","semi-conducteurs", "magnétisme", "supraconductivité", "photovoltaïsme","microscopic characterization",
    "macroscopic characterization","procédés d'élaboration", "procédés de fabrication avancés", "procédés modifiant la surface","optique non-linéaire", "lasers à semi-conducteur", "imagerie optique","cycle de vie des matériaux","commerce des matériaux","energies renouvelables", "energie nucléaire", "stockage et transport de l'énergie",
    "elements finis","abaqus", "simulations numériques", "pam-stamp", "forge","normes", "réglementation","achat", "réduction des coûts","optical properties", "solid state materials", "laser materials", "cad","logistique", "commerce international","choix des procédés", "matériaux", "cahier des charges", "dimensionnement économique", "ces",
    "ecoconception", "analyse du cycle de vie", "recyclage","retscreen","stockage de l'énergie", "transport", "habitat", "eclairage", "energies renouvelables","cao", "modélisation 3d", "catia", "creo","r","rstudio","matlab","matlab", "simulink","ms-project","java", "uml", "javadoc", "java se","réseaux d'entreprise","grafcet", "automate programmable industriel","labview","simulink", "stateflow","microchip", "c","microsoft sql server", "nosql", "newsql", "big data", "cloud computing","netbeans", "html", "css", "bootstrap", "php", "mvc","sap", "mes", "erp", "gpao","matlab", "grafcet","r","rstudio","motion control", "vision industrielle", "deep learning","sysml", "sadt", "iso 26262", "ieee","vhdl", "system c", "quartus ii", "altera","windows ce", "android", "gps", "glonass", "galiléo", "rfid", "rcsf", "sig","fip", "modbus", "modbus tcp", "profibus dp", "profibus mpi", "profinet", "can", "asi", "tcp ip", "mysql", "sql server", "opc","uml", "sysml", "rdp", "sadt","c","linux", "xenomai", "arm", "pandaboard","pspice", "psim", "eagle","robotique industrielle", "transformations homogènes", "modélisation géométrique", "modélisation cinématique", "modélisation dynamique", "planification de mouvements", "programmation hors ligne de robots industriels", "cellule robotisée","automatismes", "supervisions", "ihm", "api","sql","mysql","wireshark","vm","disque dur","root-me","iot","vhdl","c","asm","bash","regex","linux","aws","azure","docker","kubernetes","devops","cloud","switches","routeur","iot","asrerisk","cisco call manager","xml","openldap","tcp","iot","umts","vmware","cisco aci ","outils de chiffrement","outils de hashage","tcp","vpn","firewall","plusieurs technologies liée au réseau (wifi,zigbee,...)","gnss","c","c++",
    "machine learning","deep learining","ux","ihm","nlp","iot","ia","arduino","scilab","vba","excel","lean management","sql","power bi","erp","arena","logistique", "commerce international","cplex","guesk","logiciels d'étude et modélisation des cas industriels",
    "logiciels de conception des systèmes de production","eps","omf","acp","cms","scada","hum","tpm","rcm","chinois","anglais","espagnol","portoguais","coréen","italien","français","allemand","triz","management des ressources humaines","intelligence artificielle","design organisationnel", "management stratégique","management du personnel","droit","propriété intellectuelle", "intelligence économique","gestion d'entreprise","brevets","animation sportive","écologie des milieux naturels","histoire de la physique","histoire de la tech","philosophie","politique","communication","économie","sport"]
    # Construire le motif d'expression régulière en utilisant la barre verticale pour séparer les options
    pattern = r'\b(?:' + '|'.join(map(re.escape, technologies)) + r')\b'
    
    # Rechercher les correspondances dans la phrase
    entites_technologie = re.findall(pattern, phrase, flags=re.IGNORECASE)
    
    return entites_technologie